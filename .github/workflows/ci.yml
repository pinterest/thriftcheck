name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      goreleaser: ${{ steps.filter.outputs.goreleaser }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            goreleaser:
              - '.goreleaser.yml'

  lint-goreleaser:
    name: 'lint / goreleaser'
    needs: changes
    if: ${{ needs.changes.outputs.goreleaser == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: 'stable'
      - name: 'Check .goreleaser.yml'
        uses: goreleaser/goreleaser-action@v6
        with:
          args: check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: 'stable'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          only-new-issues: true

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.23", "1.24", "1.25"]

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Dependencies
        run: |
          go mod download
          go mod tidy -v
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -v ./...
